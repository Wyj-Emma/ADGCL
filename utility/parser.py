import argparse

def parse_args():
    parser = argparse.ArgumentParser(description="Run ADGCL.")
    parser.add_argument('--data_path', nargs='?', default='data/', help='Input data path.')
    parser.add_argument('--seed', type=int, default=2022, help='random seed')
    parser.add_argument('--dataset', nargs='?', default='gowalla', help='Choose a dataset from {gowalla, amazon, tmall}')
    parser.add_argument('--verbose', type=int, default=1, help='Interval of evaluation.')
    parser.add_argument('--save_model', type=bool, default=False, help='Whether to save')
    parser.add_argument('--epoch', type=int, default=100, help='Number of epochs')
    parser.add_argument('--embed_size', type=int, default=32, help='Embedding size.')
    parser.add_argument('--n_batch', type=int, default=40, help='Number of mini-batches')
    parser.add_argument('--batch_size', type=int, default=10240, help='batch size')
    parser.add_argument('--train_num', type=int, default=10000, help='Number of training instances per epoch')
    parser.add_argument('--sample_num', type=int, default=40, help='Number of pos/neg samples for each instance')
    parser.add_argument('--lr', type=float, default=0.001, help='Learning rate.')
    parser.add_argument('--emb_reg', type=float, default=2.5e-5, help='Regularizations.')
    parser.add_argument('--cor_reg', type=float, default=1e-1, help='Regularizations.')
    parser.add_argument('--ssl_reg', type=float, default=1e-1, help='Reg weight for ssl loss')
    parser.add_argument('--n_layers', type=int, default=2, help='Layer numbers.')
    parser.add_argument('--temp', type=float, default=0.3, help='temperature in ssl loss')
    parser.add_argument('--show_step', type=int, default=1, help='Test every show_step epochs.')
    parser.add_argument('--Ks', nargs='?', default='[10, 20, 40]', help='Metrics scale')
    parser.add_argument('--early', type=int, default=40, help='Step for stopping')
    parser.add_argument("--ns", type=str, default='ns', help="rns,dns,dens,mix")
    parser.add_argument("--K", type=int, default=1, help="number of negative in K-pair loss")
    parser.add_argument("--n_negs", type=int, default=4, help="number of candidate negative")
    parser.add_argument("--gamma", type=float, default=0.3, help="weight for gating task")

    return parser.parse_args()
